structure A = Absyn
structure S = Symbol
structure Ty = Types

signature ENV =
sig
    type access
    type ty
    datatype enventry = ValEntry of {ty: ty}
		      | FunEntry of {formals: ty list, result: ty}
    val base_tenv: ty S.table
    val base_venv: enventry S.table
end

structure Env :> ENV =
struct
  type ty = Ty.ty
  val base_tenv = foldr S.enter' S.empty [ (S.symbol("int"), Ty.INT) ]
end

structure Semant =
struct 

end
