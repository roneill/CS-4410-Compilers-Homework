%%
%term
    EOF 
  | ID of string
  | INT of int | STRING of string 
  | COMMA | COLON | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK 
  | LBRACE | RBRACE | DOT 
  | PLUS | MINUS | TIMES | DIVIDE | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | ARRAY | IF | THEN | ELSE | WHILE | FOR | TO | DO | LET | IN | END | OF 
  | BREAK | NIL
  | FUNCTION | VAR | TYPE | UMINUS

%nonterm  exp | program
	| let_exp
	| seq_exp
	| arith_exp 
	| comp_exp | bool_exp
	| decs | dec | var_dec | type_dec | ty | tyfields | fun_dec
	| cond_exp
	| while_exp
	| for_exp
	| lvalue_exp
	| assign_exp
	| array_exp
	| rec_exp
	| rec_seq
	| fun_exp
	| exp_list
	| op_exp
	


%pos int
%verbose
%start program
%eop EOF
%noshift EOF

%nonassoc ASSIGN
%left OR
%left AND
%nonassoc EQ NEQ LT LE GT GE
%left PLUS MINUS
%left TIMES DIVIDE
%right UMINUS

%name Tiger

%keyword WHILE FOR TO BREAK LET IN END FUNCTION VAR TYPE ARRAY IF THEN ELSE 
	 DO OF NIL

%prefer THEN ELSE LPAREN

%value ID ("bogus")
%value INT (1)
%value STRING ("")

%%

program	: exp			         ( )
				          
exp: INT			         ( )
   | NIL                                 ( )
   | BREAK                               ( )
   | STRING                              ( )
   | MINUS exp  %prec UMINUS              ( )
   | fun_exp                             ( ) 
   | op_exp                              ( )
   | rec_exp                             ( )
   | LPAREN seq_exp RPAREN               ( )
   | assign_exp                          ( )  
   | cond_exp			         ( )   
   | let_exp                             ( )
   | while_exp                           ( )
   | for_exp                             ( )
   | lvalue_exp                          ( )
   | array_exp                           ( )

seq_exp : exp                            ( )
	| exp SEMICOLON seq_exp          ( )

let_exp : LET decs IN seq_exp END        ( )

op_exp : arith_exp                       ( )
       | comp_exp                        ( )
       | bool_exp                        ( )

arith_exp: exp PLUS exp		         ( )
	 | exp MINUS exp                 ( )
	 | exp TIMES exp		 ( )
	 | exp DIVIDE exp		 ( )
				          
comp_exp: exp EQ exp		         ( )
	| exp NEQ exp		         ( )
	| exp LT exp		         ( )
	| exp GT exp		         ( )
	| exp GE exp		         ( )
	| exp LE exp		         ( )
      
bool_exp: exp OR exp		         ( )
	| exp AND exp		         ( )
	          
decs: dec			         ( )
    | dec decs			         ( )
				          
dec: var_dec			         ( )
   | type_dec                            ( )
   | fun_dec                             ( )

type_dec: TYPE ID EQ ty                  ( )

ty: ID                                   ( )
  | LBRACE tyfields RBRACE               ( )
  | ARRAY OF ID                          ( )

tyfields: ID COLON ID                    ( )
	| ID COLON ID COMMA tyfields     ( )		    
				          
var_dec: VAR ID ASSIGN exp	         ( )
       | VAR ID COLON ID ASSIGN exp      ( )

fun_dec: FUNCTION ID LPAREN tyfields RPAREN EQ exp ( )
       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp ( )

cond_exp: IF exp THEN exp ELSE exp       ( )
	| IF exp THEN exp                ( )

while_exp: WHILE exp DO exp              ( )

for_exp: FOR ID ASSIGN exp TO exp DO exp ( )

lvalue_exp: ID                           ( )
	  | lvalue_exp DOT ID                ( )
	  | lvalue_exp LBRACK exp RBRACK     ( )

assign_exp: lvalue_exp ASSIGN exp            ( )

array_exp: ID LBRACK exp RBRACK OF exp   ( )

rec_exp: ID LBRACE rec_seq RBRACE        ( )

rec_seq: ID EQ exp                       ( )
       | ID EQ exp COMMA rec_seq         ( )

fun_exp: ID LPAREN RPAREN                ( )
       | ID LPAREN exp_list RPAREN       ( )

exp_list: exp                            ( )
	| exp COMMA exp_list             ( )
